pipeline {
	agent any
	tools {
	    maven "MAVEN3"
	    jdk "OracleJDK8"
	}
	
    environment {
        registryCredential = 'ecr:eu-west-1:awscredentials'
        appRegistry = "320442627588.dkr.ecr.eu-west-1.amazonaws.com/jenkins_repo"
        siteprojectRegistry = "https://320442627588.dkr.ecr.eu-west-1.amazonaws.com"
    }
	stages {
	    stage('Fetch code') {
            steps {
                withCredentials([
                    file(credentialsId: 'Kubeconfig2', variable: 'KUBECONFIG_FILE'),
                    aws(credentialsId: 'awscredentials2', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    script {
                        def newImage = "320442627588.dkr.ecr.eu-west-1.amazonaws.com/jenkins_repo:webapp"
                        echo "New Image: ${newImage}"                        
                        sh "kubectl set image deployment/apache-deployment apache-container=${newImage} -n default --kubeconfig=${KUBECONFIG_FILE}"
                
                        sh 'sleep 40' // Poczekaj na zako≈Ñczenie aktualizacji
                        def currentImage = sh(returnStdout: true, script: 'kubectl get deployment apache-deployment --kubeconfig=${KUBECONFIG_FILE} -o jsonpath="{.spec.template.spec.containers[?(@.name==\\"apache-container\\")].image}"').trim()
                        echo "Current Image: ${currentImage}"


                        if (currentImage == newImage) {
                            echo "true"
                        } else {
                            echo "false"
                        }
                    }
                
                }
            }
        }
	}
}